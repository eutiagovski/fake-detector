{"ast":null,"code":"var _jsxFileName = \"/home/tiago/Projetos/fakenews-clf/client/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, Typography, Box, TextField, Button, Paper, Link } from \"@mui/material\";\nimport { useState } from \"react\";\nimport Detector from \"./pages/Detector\";\nimport Header from \"./pages/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [values, setValues] = useState({\n    news: \"\"\n  });\n  const [prediction, setPrediction] = useState(false);\n\n  const handleChange = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleReset = e => {\n    setValues({\n      news: \"\"\n    });\n    setPrediction(false);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"text\", values.news);\n    fetch(\"/predict\", {\n      method: \"POST\",\n      body: formData\n    }).then(res => res.json()).then(data => {\n      setPrediction(data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    maxWidth: \"xl\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Detector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rr0nOP2TNkPJtPGe+k2+0lmIvzg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Grid","Typography","Box","TextField","Button","Paper","Link","useState","Detector","Header","App","values","setValues","news","prediction","setPrediction","handleChange","e","target","name","value","handleReset","handleSubmit","preventDefault","formData","FormData","append","fetch","method","body","then","res","json","data"],"sources":["/home/tiago/Projetos/fakenews-clf/client/src/App.jsx"],"sourcesContent":["import {\n  Grid,\n  Typography,\n  Box,\n  TextField,\n  Button,\n  Paper,\n  Link,\n} from \"@mui/material\";\nimport { useState } from \"react\";\nimport Detector from \"./pages/Detector\";\nimport Header from \"./pages/Header\";\n\nfunction App() {\n  const [values, setValues] = useState({ news: \"\" });\n  const [prediction, setPrediction] = useState(false);\n\n  const handleChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  const handleReset = (e) => {\n    setValues({ news: \"\" });\n    setPrediction(false);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"text\", values.news);\n\n    fetch(\"/predict\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setPrediction(data);\n      });\n  };\n\n  return (\n    <Grid container direction=\"column\" maxWidth='xl'>\n      <Header />\n      <Detector />\n      <Footer />\n\n\n      <div id=\"footer\">\n        \n      </div>\n\n      {/* MOTIVAÇÃO  */}\n      {/* <Box sx={{ height: \"100vh\", m: 4 }}>\n        <Typography variant=\"h3\" mb={2}>\n          MOTIVAÇÃO\n        </Typography>\n        <Typography>TEXTO MOTIVAÇÃO</Typography>\n      </Box> */}\n\n      {/* SOBRE OS DADOS  */}\n      {/* <Box sx={{ height: \"100vh\", m: 4 }}>\n        <Typography variant=\"h3\" mb={2}>\n          MOTIVAÇÃO\n        </Typography>\n        <Typography>TEXTO MOTIVAÇÃO</Typography>\n      </Box> */}\n    </Grid>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SACEA,IADF,EAEEC,UAFF,EAGEC,GAHF,EAIEC,SAJF,EAKEC,MALF,EAMEC,KANF,EAOEC,IAPF,QAQO,eARP;AASA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;IAAEM,IAAI,EAAE;EAAR,CAAD,CAApC;EACA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;;EAEA,MAAMS,YAAY,GAAIC,CAAD,IAAO;IAC1BL,SAAS,CAAC,EAAE,GAAGD,MAAL;MAAa,CAACM,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;IAAvC,CAAD,CAAT;EACD,CAFD;;EAIA,MAAMC,WAAW,GAAIJ,CAAD,IAAO;IACzBL,SAAS,CAAC;MAAEC,IAAI,EAAE;IAAR,CAAD,CAAT;IACAE,aAAa,CAAC,KAAD,CAAb;EACD,CAHD;;EAKA,MAAMO,YAAY,GAAG,MAAOL,CAAP,IAAa;IAChCA,CAAC,CAACM,cAAF;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;IACAD,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBf,MAAM,CAACE,IAA/B;IAEAc,KAAK,CAAC,UAAD,EAAa;MAChBC,MAAM,EAAE,MADQ;MAEhBC,IAAI,EAAEL;IAFU,CAAb,CAAL,CAIGM,IAJH,CAISC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAJjB,EAKGF,IALH,CAKSG,IAAD,IAAU;MACdlB,aAAa,CAACkB,IAAD,CAAb;IACD,CAPH;EAQD,CAbD;;EAeA,oBACE,QAAC,IAAD;IAAM,SAAS,MAAf;IAAgB,SAAS,EAAC,QAA1B;IAAmC,QAAQ,EAAC,IAA5C;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,QAAD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAHF,eAME;MAAK,EAAE,EAAC;IAAR;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA4BD;;GAxDQvB,G;;KAAAA,G;AA0DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}