{"ast":null,"code":"var _jsxFileName = \"/home/tiago/Projetos/fakenews-clf/client/src/pages/Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Box, Typography, Divider, Container, TextField, Button, Link } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Header = () => {\n  _s();\n\n  const [pending, setPending] = useState(false);\n  const [text, setText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mb: 4,\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        pt: 4,\n        mb: 2,\n        align: \"center\",\n        mx: 10,\n        children: \"Classificador Fake News\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        mb: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        sx: {\n          fontSize: 14\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: 1,\n            mb: 2,\n            pb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            pt: 4,\n            children: \"O que \\xE9 este projeto?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              flexDirection: \"column\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              align: \"justify\",\n              children: \"Este projeto \\xE9 uma prova de conceito do uso da Intelig\\xEAncia Artificial para classifica\\xE7\\xE3o de not\\xEDcias brasileiras em portugu\\xEAs. Utilizando tecnicas de aprendizado de m\\xE1quina, treinamos um modelo com mais de 5 mil not\\xEDcias brasileiras verdadeiras e falsas e obtemos desse treinamento caracter\\xEDsticas que possibilitam a classifica\\xE7\\xE3o de um novo texto.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            pt: 4,\n            children: \"Como funciona?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              flexDirection: \"column\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              align: \"justify\",\n              children: \"Nosso sistema ir\\xE1 processar o texto, extraindo caracter\\xEDsticas sem\\xE2nticas e de escrita como palavras utilizadas, classes gramaticais mais frequentes e inten\\xE7\\xE3o geral do texto, e ent\\xE3o essas caracter\\xEDsticas s\\xE3o passadas para um modelo de aprendizado de m\\xE1quina treinado para reconhecer a probabilidade do texto ser uma fake news.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            pt: 4,\n            children: \"Como utilizar?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            fontWeight: \"bolder\",\n            pb: 2,\n            align: \"justify\",\n            children: \"Copie o texto completo da not\\xEDcia, cole no campo abaixo e clique em \\\"Verificar\\\". Para um melhor funcionamento do algoritmo, sugerimos a utiliza\\xE7\\xE3o do texto completo da not\\xEDcia, com no m\\xEDnimo 100 palavras.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            placeholder: \"Insira aqui o texto completo da not\\xEDcia\",\n            label: \"Insira o Texto da Not\\xEDcia\",\n            variant: \"standard\",\n            multiline: true,\n            rows: 10,\n            value: text,\n            onChange: e => setText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            align: \"flex-end\",\n            variant: \"contained\",\n            children: \"Verificar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            pt: 4,\n            children: \"Resultado:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              flexDirection: \"column\",\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"green\",\n              align: \"justify\",\n              children: \"Esta not\\xEDcia parece ser verdadeira!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            pt: 4,\n            children: \"Saiba mais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            mb: 1,\n            align: \"justify\",\n            children: \"Saiba mais sobre este projeto na \\xEDntegra.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              children: \"- Veja aqui o relat\\xF3rio executivo. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              children: \"- Veja aqui o github do projeto.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Header, \"0ybh4jPd4n4Yfw1Q7Pd6T5kD5m0=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","Box","Typography","Divider","Container","TextField","Button","Link","useState","Header","pending","setPending","text","setText","mb","fontSize","display","flexDirection","gap","pb","e","target","value"],"sources":["/home/tiago/Projetos/fakenews-clf/client/src/pages/Header.jsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Box,\n  Typography,\n  Divider,\n  Container,\n  TextField,\n  Button,\n  Link,\n} from \"@mui/material\";\nimport { useState } from \"react\";\n\nconst Header = () => {\n  const [pending, setPending] = useState(false);\n  const [text, setText] = useState(\"\");\n\n  return (\n    <>\n      <Box mb={4} sx={{ mb: 2 }}>\n        <Typography variant=\"h4\" pt={4} mb={2} align=\"center\" mx={10}>\n          Classificador Fake News\n        </Typography>\n        <Divider mb={2} />\n        <Container maxWidth=\"md\" sx={{ fontSize: 14 }}>\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: 1,\n              mb: 2,\n              pb:2\n            }}\n          >\n            <Typography variant=\"h6\" pt={4}>\n              O que Ã© este projeto?\n            </Typography>\n            <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\n              <Typography variant=\"body2\" align=\"justify\">\n                Este projeto Ã© uma prova de conceito do uso da InteligÃªncia\n                Artificial para classificaÃ§Ã£o de notÃ­cias brasileiras em\n                portuguÃªs. Utilizando tecnicas de aprendizado de mÃ¡quina,\n                treinamos um modelo com mais de 5 mil notÃ­cias brasileiras\n                verdadeiras e falsas e obtemos desse treinamento caracterÃ­sticas\n                que possibilitam a classificaÃ§Ã£o de um novo texto.\n              </Typography>\n            </Box>\n\n            <Typography variant=\"h6\" pt={4}>\n              Como funciona?\n            </Typography>\n            <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\n              <Typography variant=\"body2\" align=\"justify\">\n                Nosso sistema irÃ¡ processar o texto, extraindo caracterÃ­sticas\n                semÃ¢nticas e de escrita como palavras utilizadas, classes\n                gramaticais mais frequentes e intenÃ§Ã£o geral do texto, e entÃ£o\n                essas caracterÃ­sticas sÃ£o passadas para um modelo de aprendizado\n                de mÃ¡quina treinado para reconhecer a probabilidade do texto ser\n                uma fake news.\n              </Typography>\n            </Box>\n            <Typography variant=\"h6\" pt={4}>\n              Como utilizar?\n            </Typography>\n            <Typography\n              variant=\"subtitle2\"\n              fontWeight=\"bolder\"\n              pb={2}\n              align=\"justify\"\n            >\n              Copie o texto completo da notÃ­cia, cole no campo abaixo e clique\n              em \"Verificar\". Para um melhor funcionamento do algoritmo,\n              sugerimos a utilizaÃ§Ã£o do texto completo da notÃ­cia, com no mÃ­nimo\n              100 palavras.\n            </Typography>\n            <TextField\n              placeholder=\"Insira aqui o texto completo da notÃ­cia\"\n              label=\"Insira o Texto da NotÃ­cia\"\n              variant=\"standard\"\n              multiline\n              rows={10}\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n            />\n            <Button align=\"flex-end\" variant=\"contained\">\n              Verificar\n            </Button>\n\n            <Typography variant=\"h6\" pt={4}>\n              Resultado:\n            </Typography>\n            <Box sx={{ display: \"flex\", flexDirection: \"column\", mb: 2 }}>\n              <Typography variant=\"h6\" color=\"green\" align=\"justify\">\n                Esta notÃ­cia parece ser verdadeira!\n              </Typography>\n            </Box>\n\n            <Divider />\n            <Typography variant=\"h6\" pt={4}>\n              Saiba mais\n            </Typography>\n            <Typography variant=\"subtitle2\" mb={1} align=\"justify\">\n              Saiba mais sobre este projeto na Ã­ntegra.\n            </Typography>\n              <Box sx={{display: 'flex', flexDirection: 'column', gap: 1}}>\n                <Link>- Veja aqui o relatÃ³rio executivo. </Link>\n                <Link>- Veja aqui o github do projeto.</Link>\n              </Box>\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Header;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}