{"ast":null,"code":"var _jsxFileName = \"/home/tiago/DevData/projetos/fake-detector/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, Typography, Box, TextField, Button, Paper, Link } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [values, setValues] = useState({\n    news: \"\"\n  });\n  const [prediction, setPrediction] = useState(false);\n\n  const handleChange = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleReset = e => {\n    setValues({\n      news: \"\"\n    });\n    setPrediction(false);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"text\", values.news);\n    fetch(\"http://localhost:5000/predict\", {\n      method: \"POST\",\n      body: formData\n    }).then(res => res.json()).then(data => {\n      setPrediction(data.result);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h1\",\n        mb: 4,\n        children: \"Fato ou Fake?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"article\",\n        children: \"Este projeto \\xE9 um classificador que utiliza rede neural para reconhecer a probabilidade de uma not\\xEDcia ser verdadeira ou falsa.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        my: 4,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          children: \"Verificar uma not\\xEDcia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"detector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rr0nOP2TNkPJtPGe+k2+0lmIvzg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Grid","Typography","Box","TextField","Button","Paper","Link","useState","App","values","setValues","news","prediction","setPrediction","handleChange","e","target","name","value","handleReset","handleSubmit","preventDefault","formData","FormData","append","fetch","method","body","then","res","json","data","result","height","display","flexDirection","alignItems","justifyContent"],"sources":["/home/tiago/DevData/projetos/fake-detector/client/src/App.js"],"sourcesContent":["import {\n  Grid,\n  Typography,\n  Box,\n  TextField,\n  Button,\n  Paper,\n  Link,\n} from \"@mui/material\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [values, setValues] = useState({ news: \"\" });\n  const [prediction, setPrediction] = useState(false);\n\n  const handleChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  const handleReset = (e) => {\n    setValues({ news: \"\" });\n    setPrediction(false);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"text\", values.news);\n\n    fetch(\"http://localhost:5000/predict\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setPrediction(data.result);\n      });\n  };\n\n  return (\n    <Grid container direction=\"column\">\n      <Box\n        sx={{\n          height: \"100vh\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Typography variant=\"h1\" mb={4}>\n          Fato ou Fake?\n        </Typography>\n        <Typography variant=\"article\">\n          Este projeto é um classificador que utiliza rede neural para\n          reconhecer a probabilidade de uma notícia ser verdadeira ou falsa.\n        </Typography>\n\n        <Box my={4}>\n          <Link>Verificar uma notícia</Link>\n        </Box>\n      </Box>\n\n      <div id='detector'>\n        \n      </div>\n\n      {/* MOTIVAÇÃO  */}\n      {/* <Box sx={{ height: \"100vh\", m: 4 }}>\n        <Typography variant=\"h3\" mb={2}>\n          MOTIVAÇÃO\n        </Typography>\n        <Typography>TEXTO MOTIVAÇÃO</Typography>\n      </Box> */}\n\n      {/* SOBRE OS DADOS  */}\n      {/* <Box sx={{ height: \"100vh\", m: 4 }}>\n        <Typography variant=\"h3\" mb={2}>\n          MOTIVAÇÃO\n        </Typography>\n        <Typography>TEXTO MOTIVAÇÃO</Typography>\n      </Box> */}\n    </Grid>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SACEA,IADF,EAEEC,UAFF,EAGEC,GAHF,EAIEC,SAJF,EAKEC,MALF,EAMEC,KANF,EAOEC,IAPF,QAQO,eARP;AASA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC;IAAEI,IAAI,EAAE;EAAR,CAAD,CAApC;EACA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;;EAEA,MAAMO,YAAY,GAAIC,CAAD,IAAO;IAC1BL,SAAS,CAAC,EAAE,GAAGD,MAAL;MAAa,CAACM,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;IAAvC,CAAD,CAAT;EACD,CAFD;;EAIA,MAAMC,WAAW,GAAIJ,CAAD,IAAO;IACzBL,SAAS,CAAC;MAAEC,IAAI,EAAE;IAAR,CAAD,CAAT;IACAE,aAAa,CAAC,KAAD,CAAb;EACD,CAHD;;EAKA,MAAMO,YAAY,GAAG,MAAOL,CAAP,IAAa;IAChCA,CAAC,CAACM,cAAF;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;IACAD,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBf,MAAM,CAACE,IAA/B;IAEAc,KAAK,CAAC,+BAAD,EAAkC;MACrCC,MAAM,EAAE,MAD6B;MAErCC,IAAI,EAAEL;IAF+B,CAAlC,CAAL,CAIGM,IAJH,CAISC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAJjB,EAKGF,IALH,CAKSG,IAAD,IAAU;MACdlB,aAAa,CAACkB,IAAI,CAACC,MAAN,CAAb;IACD,CAPH;EAQD,CAbD;;EAeA,oBACE,QAAC,IAAD;IAAM,SAAS,MAAf;IAAgB,SAAS,EAAC,QAA1B;IAAA,wBACE,QAAC,GAAD;MACE,EAAE,EAAE;QACFC,MAAM,EAAE,OADN;QAEFC,OAAO,EAAE,MAFP;QAGFC,aAAa,EAAE,QAHb;QAIFC,UAAU,EAAE,QAJV;QAKFC,cAAc,EAAE;MALd,CADN;MAAA,wBASE,QAAC,UAAD;QAAY,OAAO,EAAC,IAApB;QAAyB,EAAE,EAAE,CAA7B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATF,eAYE,QAAC,UAAD;QAAY,OAAO,EAAC,SAApB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAZF,eAiBE,QAAC,GAAD;QAAK,EAAE,EAAE,CAAT;QAAA,uBACE,QAAC,IAAD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAjBF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAuBE;MAAK,EAAE,EAAC;IAAR;MAAA;MAAA;MAAA;IAAA,QAvBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6CD;;GAzEQ7B,G;;KAAAA,G;AA2ET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}